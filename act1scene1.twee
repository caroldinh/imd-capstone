:: StoryTitle
Fairy Quest Act I Scene I


:: StoryData
{
  "ifid": "BB3B4A8F-A555-4CD3-A7A4-57B2127E7E3F",
  "format": "SugarCube",
  "format-version": "2.30.0",
  "start": "Login",
  "tag-colors": {
    "OS": "none",
    "Concept": "purple",
    "Fullscreen": "none",
    "Desktop": "none",
    "Magic-Web": "yellow",
    "Header": "purple"
  },
  "zoom": 1
}


:: Desktop 1 [Desktop OS] {"position":"600,500","size":"100,100"}
!Olsen Placeholder desktop

<<cycle "$iconClicked" once>>
	<<option "Tax Forms">>
    <<option "Do Not Open">>
	<<option "TOPSECRETFILESDONTOPEN">>
    <<option "Fine you asked for it">>
    <<option "[[Magic Web|Magic Web 1]]">>
<</cycle>>


:: Inbox 1 [OS Inbox] {"position":"475,250","size":"100,100"}
<<silently>>
  <<run $(document).on(':passagedisplay', function() {
  	  $(document).unbind(':passagedisplay');
  	  window.renderInboxTemplate();
      let inbox = $("#inbox-emails");
      window.populateExistingMessages(inbox);
  })>>
  <<repeat 2s>>
      <<script>>    
 		  if ($('.flip-flop-email').length == 0) {
          	let inbox = $("#inbox-emails");
          	window.populateInbox(inbox, false);
          }
      <</script>>
  <</repeat>>
  
  <<timed 5s>>
      <<script>>
      	if (window.checkpoint == 1) {
            window.displayLine(window.SCREEN1_SCRIPT, 0);
            $(document).on('script-finished', () => {
            console.log("script finished");
            	let inbox = $("#inbox-emails");
                let email = `<div id="email" class="unread flip-flop-email">
                  <span class="email-icon material-symbols-outlined">check_box_outline_blank</span>
                  <span class="email-icon material-symbols-outlined">star</span>
                  <p class="subject-line">:3</p>
                  <p class="date">NOW!!!</p>
        </div>`;
                inbox.prepend(email);
                $('.flip-flop-email').on("click", () => {
                	Engine.play("Open Email 1");
                    window.checkpoint = 2;
                });
            });
        } else if (window.checkpoint == 3) {
        }
      <</script>>
	<</timed>>
<</silently>>

<style>

.flip-flop-email {
  font-weight: bolder;
  color: #ff00ff;
}

.flip-flop-email :hover {
	cursor: pointer;
}

</style>

@@.symbolic-link;[[Open Email 1]]@@


:: Inbox 2 [OS Inbox] {"position":"475,500","size":"100,100"}
<<silently>>
  <<run $(document).on(':passagedisplay', function() {
  	  $(document).unbind(':passagedisplay');
  	  window.renderInboxTemplate();
      let inbox = $("#inbox-emails");
      window.populateExistingMessages(inbox);
      window.displayLine(window.SCREEN2_SCRIPT1, 0);
      window.checkpoint = 3;
  })>>
  <<script>>
    $(document).on("script-finished", () => {
    	console.log(window.checkpoint);
    	if (window.checkpoint == 3) {
            $("#important").css("display", "none");
            window.composeEmail("EVERYONE AT WORK", "AND THEIR BOSSES", "IMPORTANT: Critical Software Update", 
            "<img src='https://raw.githubusercontent.com/caroldinh/fairy-quest/main/placeholders/computer-viruses.png'></img>");
            window.displayLine(window.SCREEN2_SCRIPT2, 0);
            window.checkpoint = 4;
        } else {
        	Engine.play("Desktop 1");
        }
    });
	<</script>>
<</silently>>

@@.symbolic-link;[[Desktop 1]]@@


:: Inbox Playground [OS Inbox Fullscreen] {"position":"175,100","size":"100,100"}
<<silently>>
  <<run $(document).on(':passagedisplay', function() {
  	  $(document).unbind(':passagedisplay');
  	  window.renderInboxTemplate();
      let inbox = $("#inbox-emails");
      window.populateExistingMessages(inbox);
      window.composeEmail("Everyone", "Everyone else", "IMPORTANT", "HI");
  })>>
<</silently>>


:: Login [OS] {"position":"175,225","size":"100,100"}
<<run $(document).on(':passagedisplay', function() {
	$('#next').css('display', 'none');
	$('#textbox-password').prop('type', 'password');
    $('#textbox-password').on('input', function() {
    	if (window.autoFillText($(this), "testing testing 123")) {
       		Engine.play("Inbox 1");
        };
    });
    let video = document.querySelector("#login-profile-picture");
    if (navigator.mediaDevices.getUserMedia) {
    	navigator.mediaDevices.getUserMedia({ video: true })
    	.then(function (stream) {
   		video.srcObject = stream;
    })
    .catch(function (err0r) {
    	console.log("Something went wrong!");
    });
    }
})>>

<div id="video-container">
	<video autoplay="true" id="login-profile-picture"></video>
</div>
!Olsen
<<textbox "$password" "">>
This computer is property of...

<style>

#story {
	display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

#login-profile-picture {
	background-color: #ffffff;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    margin-left: auto;
    margin-right: auto;
    object-fit: cover;
}

h1 { 
	text-align: center;
}

#textbox-password {
	width: 300px;
}

#next {

}

#video-container {
	width: fit-content;
    margin: auto;
}
</style>

@@.symbolic-link;[[Inbox 1]]@@


:: Magic Web 1 [Magic-Web] {"position":"675,350","size":"100,100"}
!Scroll Search

<div id="scroll-search">
      <span id="search-icon" class="material-symbols-outlined">search</span>
      <p>Search the Web</p>
  </div>
  
  <div id="buttons-container">
  		<button type="button">Enter</button>
        <button type="button">I'm feeling lucky</button>
  </div>
  
  <style>
  
  #scroll-search {
	display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: left;
	height: fit-content;
    border: 1px solid white;
    border-radius: 64px;
    width: 60%;
  	margin-bottom: 16px;
}

  </style>


:: Open Email 1 [OS Inbox] {"position":"475,375","size":"100,100"}
<<silently>>
      <<run $(document).on(':passagedisplay', function() {
       $(document).unbind(':passagedisplay');
        window.renderInboxColOne();
      })>>
<</silently>>

<div id="inbox-col2">
   <div id="inbox-search">
      <span id="search-icon" class="material-symbols-outlined">search</span>
      <p>Search K-Mail</p>
  </div>
    <div id="inbox-email-open">
    
    	@@.flip-flop;C’mooooooon. Don’t be such a grump. Seriously, I thought we were supposed to be partners!@@
        
		[img[https://github.com/caroldinh/fairy-quest/blob/main/images/Bonnieclyde_f.jpg?raw=true]]
        
        @@.flip-flop;I’ve been up all night searching for leads and what have you been doing? Sleeping? For 8 whole hours? Ridiculous. Even back when I HAD a physical body, I only ever slept for 3 MAX.@@
        
		@@.olsen;I’ve got work to do. Shush.@@
        
        @@.flip-flop;It’s always “Flip Flop, I have a job”, “Flip Flop, don’t delete my work documents”, “Flip Flop, I can’t bring my laptop to the Centaurs on Assateague Island so they can enchant on my hard drive blah blah blah”. You’re no fun >:/@@
        
        @@.olsen;I was never fun. Also those centaurs were totally scamming you.@@
        
	</div>    
    
    <!-- TODO: CHANGE TO 10s AFTER DONE TESTING -->
    <<timed 10s>>
    	<<silently>>
        	<<script>>
            	window.checkpoint = 3;
            <</script>>
		<</silently>>
    	<!--<span onclick="window.displayLine(window.SCREEN2_SCRIPT1, 0);"></span>-->
        @@#important;[[New message in Inbox: ''URGENT ACTION REQUESTED''|Inbox 2]]@@
    <</timed>>
    
</div>

<style>


#inbox-email-open {
  background-color: #ffffff;
  min-height: 100%;
  height: fit-content;
  padding: 32px;
}

#inbox-email-open img {
	height: 500px;
}

 #important {
 	position: fixed;
    bottom: 16px;
    right: 16px;
 	padding: 8px;
    width: fit-content;
    background-color: #ffff00;
    color: #000000;
 }
 
 #important a {
 	all: unset !important;
 }
 
  #newEmail {
  	display: none;
 }

</style>


:: Untitled Passage [Header] {"position":"175,350","size":"100,100"}
<link rel="stylesheet" href="css/style.css" type="text/css">


:: \[CONCEPT\] Toggle Phone [Concept OS] {"position":"500,125","size":"100,100"}
<<run $(document).on(':passagedisplay', function() {
	$('#confirmation').css('display', 'none');
    $('#textbox-input').on('input', function() {
    	console.log($(this).val());
    	if ($(this).val() == "KDGJ9@!?_D") {
        	$('#confirmation').css('display', 'block');
        }
    });
})>>

@@#action-header;Action Requested:@@
@@#tfa-header;Two-Factor Authentication@@

<div id="code-card">
   Authentication Code
  <<textbox  "$input" "">>
  @@.body-small;Resize your window to access the confirmation code on your mobile device.@@
  @@#confirmation;Correct@@
</div>

<<set $passcode to "KDGJ9@!?_D">>
<div id="phone">
	!!PASSWORD: $passcode
</div>

<style>

.passage {
	display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

#phone {
	visibility: hidden;
    position: fixed;
    top: 0;
    left: 0;
    background-color: #00ffff;
    width: 100%;
    height: 100%;
}

#phone h1 {
	color: black;
}

#action-header {
	font-size: 24px;
    font-weight: 700;
    margin-bottom: 0;
    line-height: 1em;
}

#tfa-header {
	font-size: 32px;
}

#confirmation {
	color: green;
}

#code-card {
	border-radius: 36px;
    width: fit-fcontent;
    height: fit-content;
    padding: 32px;
    border: 1px solid white;
}

#textbox-input {
	width: 100%;
}

.body-small {
	width: 100%;
    text-align: justify;
}

@media only screen and (max-width: 600px) {

	#phone {
     	visibility: visible;
    }
    
}

</style>


:: StoryScript [script]
window.checkpoint = 1;

window.finishScriptEvent = new Event("script-finished");

window.sleep = ms => new Promise(r => setTimeout(r, ms));

window.SCREEN1_SCRIPT = [
  	{
      "character": "Flip-Flop",
      "line": "Hiiiiiiiii :3c",
      "popup-class": "",
      "player-response":"",
      "sprite-url": "https://raw.githubusercontent.com/caroldinh/fairy-quest/main/placeholders/flipflop-temp.png", 
    },
   	{
      "character": "Flip-Flop",
      "line": "Oh come on, you’re seriously doing work right now?",
      "popup-class": "",
      "player-response":"Look, I know you want to look for your family but I can’t just put everything on hold at the drop of a hat. Some of us have jobs. We can look later, okay?",
      "sprite-url": "https://raw.githubusercontent.com/caroldinh/fairy-quest/main/placeholders/flipflop-temp.png", 
    },
  ];

window.SCREEN2_SCRIPT1 = 
  [
  	{
      "character": "Flip-Flop",
      "line": "I bet I can speed up all this dumb work stuff.",
      "popup-class": "",
      "player-response":"",
      "sprite-url": "https://raw.githubusercontent.com/caroldinh/fairy-quest/main/placeholders/flipflop-temp.png", 
    },
];

window.SCREEN2_SCRIPT2 = 
  [
  	{
      "character": "Flip-Flop",
      "line": "There we go! That should keep em busy for a few hours.",
      "popup-class": "",
      "player-response":"Oh my god. You’re not gonna leave me alone unless I do what you want, are you?",
       "sprite-url": "https://raw.githubusercontent.com/caroldinh/fairy-quest/main/placeholders/flipflop-temp.png", 
    },
    {
      "character": "Flip-Flop",
      "line": "Nope!",
      "popup-class": "",
      "player-response":"Ughhh, fine.",
      "sprite-url": "https://raw.githubusercontent.com/caroldinh/fairy-quest/main/placeholders/flipflop-temp.png", 
    },
  ];

window.displayLine = function(script, i) {
  
  $(document).unbind(':dialogclosed');
  $("#sprite").remove();
  Dialog.close();
  
  if (i < script.length) {
    let line = script[i]
    Dialog.setup(line['character'], line['popup-class']);
    Dialog.append(line['line']);
    
    // Show text box if Olsen has a response
    if (line['player-response'] != "") {
      Dialog.append(`<br><textarea id="player-response"></textarea>`);
      $("#ui-dialog-close").css("display", "none");
      $('#ui-dialog-body #player-response').on('input', function() {
    	if (window.autoFillText($(this), line['player-response'])) {
          //console.log($("#player-response-button"));
          if ($('#player-response-button').length == 0) {
              Dialog.append(`<br><input type="button" id="player-response-button" value="NEXT">`);
              $('#player-response-button').click(() => {window.displayLine(script, i+1)})
          }
        };
    	});
    } else {
      $("#ui-dialog-close").css("display", "unset");
    }
    Dialog.open();
    
    if (line['player-response']) {
    	$(document).on(':dialogclosed', function (ev) {
      		window.displayLine(script, i);
    	});
    } else {
      $(document).on(':dialogclosed', function (ev) {
      		window.displayLine(script, i+1);
    	});
    }
    
    // Display character sprite
    if (line['sprite-url']) {
      let spriteX, spriteY;
      if (line['sprite-x'] && line['sprite-y']) {
        spriteX = line['sprite-x'];
        spriteY = line['sprite-y'];
      } else {
        let dialogBBox = $("#ui-dialog").get(0).getBoundingClientRect();
        console.log(dialogBBox);
        spriteX = (dialogBBox.left - 100) + "px";
        spriteY = (dialogBBox.bottom - 100) + "px";
      }
      let sprite = `<img id='sprite' src=${line['sprite-url']} style='left:${spriteX};top:${spriteY};'></img>`;
      $("body").append(sprite);
    }
  } else {
    document.dispatchEvent(window.finishScriptEvent);
    Dialog.close();
  }
}

Date.prototype.addDays = function(days) {
  var date = new Date(this.valueOf());
  date.setDate(date.getDate() + days);
  return date;
}

window.autoFillText = function(input, autofill) {
  let index = input.val().length;
  if ((index) > autofill.length) {
    input.val(autofill);
    return true;
  } else {
    input.val(autofill.substring(0, index));
    return false;
  }
}

window.populateInbox = function(inbox, read) {
  console.log("Adding email");
  const PREFIXES = ["", "FW: ", "ACTION REQUIRED: ", "ACTION REQUESTED: ", "IMPORTANT: ", "REMINDER: ", 
                    "PENDING: ", "URGENT: "];
  const TOPICS = ["training", "meeting", "ticket", "misc"];
  
  let subject_line = "";
  let email_topic = TOPICS[Math.floor(Math.random() * TOPICS.length)];
  
  if (email_topic == "training") {
    
    const TRAININGS = ["phishing detection", "diversity & inclusion", "anti-malware", "workplace safety", "cybersecurity"];
    const TRAINING_TYPES = ["course", "training", "module", "workshop"];
    const prefix = PREFIXES[Math.floor(Math.random() * PREFIXES.length)];
    const training = TRAININGS[Math.floor(Math.random() * TRAININGS.length)];
    const training_type = TRAINING_TYPES[Math.floor(Math.random() * TRAINING_TYPES.length)];
    const deadline = new Date().addDays(Math.random() * 30).toLocaleDateString();
    subject_line = `${prefix}Complete your online ${training} ${training_type} by ${deadline}`;
    
  } else if (email_topic == "meeting") {
    
    const MEETINGS = ["Meeting", "Touch base", "Catch up", "Call", "Chat", "Discussion", "Regroup", "Zoom"];
    const TOPICS = ["new feature", "Q4 plans", "team transition", "reported issues"];
    const prefix = PREFIXES[Math.floor(Math.random() * PREFIXES.length)];
    const topic = TOPICS[Math.floor(Math.random() * TOPICS.length)];
    const meeting = MEETINGS[Math.floor(Math.random() * MEETINGS.length)];
    const days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];
    const hours = [9, 10, 11, 12, 1, 2, 3, 4];
    const minutes = ["00", "15", "30", "45"];
    const time = `${days[Math.floor(Math.random() * days.length)]} @ ${hours[Math.floor(Math.random() * hours.length)]}:${minutes[Math.floor(Math.random() * minutes.length)]}`;
    subject_line = `${prefix}${meeting} about ${topic} on ${time}`;
    
  } else if (email_topic == "ticket") {
    
    const GROUPS = ["DTEI", "DFMQ", "BAT", "MEAS", "IRB", "ASTR"];
    const TICKET_NUMBER = Math.floor(Math.random() * 9099) + 100;
    const ID = `[${GROUPS[Math.floor(Math.random() * GROUPS.length)]}-${TICKET_NUMBER}]`;
    const PROBLEMS = ["Bug", "Reported bug", "Data validation needed", "Update search parameter", "Update needed",
                      "Incorrect link on", "Incorrect text on", "Incorrect parameters", "Refactor needed",
                      "Inefficient loading", "Alignment problem", "Hidden text field", "Incorrect data type", "Hotfix"];
    const TRANSITIONS = ["for", "with", "on"];
    const SOURCE = ["website", "application", "mobile", "mobile application", "home page", "settings page", 
                    "landing page", "database", "frontend", "backend"];
    const problem = PROBLEMS[Math.floor(Math.random() * PROBLEMS.length)];
    const transition = TRANSITIONS[Math.floor(Math.random() * TRANSITIONS.length)];
    const source = SOURCE[Math.floor(Math.random() * SOURCE.length)];
    subject_line = `${ID} ${problem} ${transition} ${source}`;
    
  } else {
    const PERSONAL_MESSAGES = ["Just catching up", "Just want to catch up", "Are you free next week?", 
                               "Thought you would appreciate this...", "Good news!!", "Thoughts on this?",
                               "Could use your feedback here", "CONGRATULATIONS!!! You are the lucky winner",
                               "Important update from payroll", "Action requested from HR"];
    subject_line = PERSONAL_MESSAGES[Math.floor(Math.random() * PERSONAL_MESSAGES.length)];
  }
                   
  let date = new Date().toLocaleDateString();
  let email = `<div id="email" class="${read ? "read" : "unread"}">
      <span class="email-icon material-symbols-outlined">check_box_outline_blank</span>
      <span class="email-icon material-symbols-outlined">star</span>
      <p class="subject-line">${subject_line}</p>
      <p class="date">${date}</p>
    </div>`;
  inbox.prepend(email);
}

window.populateExistingMessages = function(inbox) {
  for (let i = 0; i < 20; i++) {
    window.populateInbox(inbox, Math.floor(Math.random() * 12) > 0);
  }
}

window.renderInboxColOne = function() {
  let template = `
  <div id="inbox-col1">
	<div id="inbox-header">
      <span id="mail-icon" class="material-symbols-outlined">mail</span>
 	  <h1>K-MAIL</h1>
    </div>
  <div id="inbox-sidebar">
  	<div id="inbox-compose"><span id="write-icon" class="material-symbols-outlined">stylus</span>NEW MESSAGE</div>
    <p><span id="write-icon" class="material-symbols-outlined">inbox</span>Inbox</p>
    <p><span id="write-icon" class="material-symbols-outlined">send</span>Sent</p>
    <p><span id="write-icon" class="material-symbols-outlined">drafts</span>Drafts</p>
    <p><span id="write-icon" class="material-symbols-outlined">star</span>Starred</p>
    <p><span id="write-icon" class="material-symbols-outlined">warning</span>Spam</p>
    <p><span id="write-icon" class="material-symbols-outlined">delete</span>Trash</p>
  </div>
</div>
	`
  $('.passage').prepend(template);
}

window.renderInboxTemplate = function() {
  let template = `
<div id="inbox-col2">
   <div id="inbox-search">
      <span id="search-icon" class="material-symbols-outlined">search</span>
      <p>Search K-Mail</p>
  </div>
    <div id="inbox-emails">
    </div>
</div>
	`
  $('.passage').prepend(template);
  window.renderInboxColOne();
}

window.composeEmail = function(to, cc, subject, body) {
  let emailTemplate=`
  <div class="inbox-new-email">
	<div class='inbox-new-email-header'>NEW EMAIL
    <span id="write-icon" class="material-symbols-outlined">close</span></div>
    <div class="inbox-new-email-field">To: ${to}</div>
    <div class="inbox-new-email-field">CC: ${cc}</div>
    <div class="inbox-new-email-field">Subject: ${subject}</div>
	<div class="inbox-new-email-body">
    	${body}
     </div>
     <div class="inbox-email-bottom-toolbar">
     	<div class="inbox-email-send">SEND</div>
     	<span id="write-icon" class="material-symbols-outlined">attach_file</span>
        <span id="write-icon" class="material-symbols-outlined">link</span>
        <span id="write-icon" class="material-symbols-outlined">mood</span>
        <span id="write-icon" class="material-symbols-outlined">add_photo_alternate</span>
        <span id="write-icon" class="material-symbols-outlined">signature</span>
        <span id="write-icon" class="material-symbols-outlined">more_vert</span>
     </div>
</div>
	`;
  $('.passage').append(emailTemplate);
}

:: StoryStylesheet [stylesheet]
@import url('css/root.css');
@import url('css/style.css');
@import url('css/inbox.css');